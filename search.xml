<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux 常用命令速查手册</title>
    <url>/2025/07/22/Linux/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[
参考资料：Linux


常用命令速查表


命令示例
说明
命令示例
说明



tab
快速补齐
cp 源文件 目标
复制文件


help
查看任何命令的帮助
mv 文件 目录
移动文件


ls -alh
列出所有文件（含隐藏）
find 目录 -name 文件名
查找文件


touch 文件名
新建一个文件
grep &quot;关键字&quot; 文件名
在文件中查找内容


vi 文件名
编辑文件
mkdir 目录名
创建目录


:wq / :x
保存并退出 vi
rmdir 目录名
删除空目录


:q!
不保存并退出 vi
rm -rf 文件/目录
强制删除


clear
清屏
ifconfig
查看服务器 IP


open ./
打开当前目录（Mac 常用）
ping 域名/IP
检查网络是否联通


whoami
查看当前用户
ctrl+c
结束前台程序


useradd 用户名
新建用户
su 用户名
切换用户


passwd 用户名
设置密码
pwd
显示当前路径


cd 目录 &#x2F; cd ..
切换目录 &#x2F; 上级目录
cat 文件
查看文件内容


cd / &#x2F; cd ~
根目录 &#x2F; 用户主目录
head -n 10 文件
查看前 10 行


ps -ef
查看所有进程
tail -f 文件
动态查看日志


kill -9 PID
强制杀进程
&#96;ps -ef
grep 关键字&#96;


netstat -an
查看网络连接
more 文件
分页查看（回车下一行，空格下一页）


chmod -R 755 文件/目录
修改权限
less 文件
翻页查看（空格翻页，q 退出）


tar -czvf 压缩包.tar.gz 文件名
压缩文件&#x2F;目录
tar -xzvf 压缩包.tar.gz
解压


zip -r 压缩包.zip 文件/目录
zip 压缩
unzip 压缩包.zip
zip 解压


reboot
重启系统
halt
关机


logout
注销用户





常见端口号
MySQL: 3306  
Tomcat: 8080  
SSH: 22

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>命令</tag>
        <tag>Shell</tag>
        <tag>速查</tag>
      </tags>
  </entry>
  <entry>
    <title>JMeter 接口测试笔记</title>
    <url>/2025/06/20/Jmeter/Jmeter/</url>
    <content><![CDATA[JMeter 接口测试笔记页面的响应时间应该小于 0.3s (300ms)
接口的概念
传递数据的通道测试系统组件间接口的一种测试，工具模拟前端对接口进行调用 — 灰盒测试

为什么测试接口

前端晚于后端开发，后端已经开发完了，没有前端，提前介入测试，用工具模拟前端对接口调用  
防止恶意绕过前端，对后端发送异常数据，接口能够处理，接口的安全性、健壮性 — F12 &#x3D; 系统测试阶段


接口测试应用场景

单元测试 → 集成测试 → 系统测试 → 验收测试  
需求阶段 → 开发阶段 → 测试阶段 → 上线阶段  
测试左移：提早介入项目中，降低成本，提高效率，尽早发现问题  
测试右移：介入用户问题，跟踪用户 bug，补充用例  
埋点测试：测试过程中记录用户操作，测试人员查看用户行为，发现问题


项目阶段：接口测试通常在集成测试 &#x2F; 系统测试阶段进行
接口类型
同一个系统中模块与模块之间的接口 &#x2F; 前端后端接口 — 内部接口  
跨系统平台的对接 — 外部接口 &#x2F; 第三方接口（如身份证验证、刷脸验证、短信验证）

常见接口协议
HTTP &#x2F; HTTPS：Web 应用程序接口，浏览器与服务器通信  
WebSocket：通过 soapui 协议获取数据

接口方法


方法
功能



GET
获取资源


POST
创建资源 &#x2F; 发送数据


PUT
更新资源


DELETE
删除资源


PATCH
部分更新资源


OPTIONS
获取资源支持的请求方法


HEAD
获取资源头信息


TRACE
获取资源调试信息


CONNECT
建立代理连接


OTHER
其他请求方法


HTTP 请求组成
请求行：方法、URL、HTTP 版本  
请求头：Content-Type、User-Agent 等  
空行  
请求体：客户端发送的数据（参数等）  
响应行：HTTP 版本 + 状态码 + 状态信息  
响应头：Response-Header、Cookie&#x2F;Token  
空行  
响应正文：返回给客户端的数据（JSON &#x2F; XML）

常见状态码


状态码
含义



200
请求成功


302
重定向


304
资源未修改


400
请求错误


403
权限不足


404
资源不存在


500
服务器错误


504
网关超时


鉴权方式Cookie 鉴权

Cookie + Session 配套使用  
Cookie 存储在客户端，Session 存储在服务器  
登录后，服务器生成 session_id 存储，客户端通过 Cookie 保存 session_id  
优点：实现简单  
缺点：用户数据在客户端存在安全风险，服务器压力大


Token 鉴权

登录生成 Token（用户信息 + 秘钥 + 加密算法）  
Token 存储在 Redis 内存数据库  
再次登录，服务器重新计算 Token 并比对  
优点：无状态、分布式友好、安全性高


接口测试流程
获取接口需求  
编写接口用例  
评审用例  
搭建测试环境  
执行接口测试  
完成测试报告

单接口测试示例
登录、支付、优惠券等

接口自动化测试
冒烟测试（用例覆盖率 ~30%）  
全量接口自动化测试（用例覆盖率 ≥ 80~90%）

Content-Type 类型


类型
用法



application&#x2F;json
键值对 &#123; &quot;username&quot;:&quot;Aa123456&quot; &#125;


application&#x2F;x-www-form-urlencoded
表单格式


application&#x2F;xml
WebService &#x2F; SOAP 协议 &lt;username&gt;Aa123456&lt;/username&gt;


参数化方式
配置元素：用户定义变量，全局参数  
CSV Data Set Config：通过 CSV 批量操作  
函数助手：Random、RandomString 获取随机值

关联提取
正则表达式提取器：左边界值 (.*?) 右边界值 → 模板 $1$  
JSON 提取器：$.data.token 或 $..token（任意层，唯一值）

断言方式
响应文本  
响应代码

提 Bug 注意事项
清楚标明用户角色  
问题描述  
截图响应体

接口测试用例设计
正常调用  
检查响应结果、数据库数据正确性  
覆盖有效类、边界值


异常调用  
空值、长度异常、类型异常  
业务约束，如订单状态  
参数名错误、多&#x2F;少参数


安全性测试  
密码加密传输  
是否返回敏感数据（身份证、银行卡号）  
Token &#x2F; 鉴权校验



]]></content>
      <categories>
        <category>测试笔记</category>
        <category>JMeter</category>
      </categories>
      <tags>
        <tag>接口测试</tag>
        <tag>性能测试</tag>
        <tag>自动化</tag>
      </tags>
  </entry>
</search>
